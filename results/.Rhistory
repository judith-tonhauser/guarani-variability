.26 * (-15)
(.26 * (-15)) + (.74 * 5)
R.Version()
pbinom(507,111,.2)
pnorm(700, mean=507, sd=111)
pnorm(700,507,111)
1-pnorm(700,507,111)
pnorm(65,mean=65,sd=2.8)
pnorm(65,mean=69,sd=2.8)
1-pnorm(75,69,2.8)
pnorm(72,69,2.8)-(1-pnorm(66,69,2.8))
pnorm(72,69,2.8)
pnorm(66,69,2.8)
pnorm(75,69,2.8)
pnorm(72,69,2.8)
pnorm(66,69,2.8)
1-pnorm(66,69,2.8)
pnorm(72,69,2.8)-(1-pnorm(66,69,2.8))
pnorm(72,69,2.8)
1-pnorm(66,69,2.8)
pnorm(72,69,2.8)
pnorm(66,69,2.8)
1-pnorm(66,69,2.8)
1-pnorm(75,69,2.8)
pnorm(65,mean=69,sd=2.8)
pnorm(72,69,2.8)-pnorm(66,69,2.8)
qnorm(0.98, mean=507, sd=111)
help(pnorm)
qnorm(.005,69,2.8)
1-qnorm(.0025,69,2.8)
qnorm(.9975,69,2.8)
qnorm(.9975,69,2.8)
qnorm(.005,69,2.8)
qnorm(.9975,69,2.8)
pnorm(8,20,.5)
pnorm(8,20,2.24)
pnorm(30.5,22.5,sd=4.5)
1 - pnorm(30.5,22.5,sd=4.5)
setwd('/Users/tonhauser.1/Documents/fieldwork-data/guarani-fieldwork/Dec-2016/experiment/results')
source('scripts/helpers.R')
library(tidyr)
library(languageR)
library(lme4)
theme_set(theme_bw())
d = read.csv("../results.csv")
nrow(d)
names(d)
head(d)
summary(d)
# age and gender of participants
table(d$gender,d$age)
d = droplevels(subset(d,d$itemNr != "22"))
nrow(d)
d = droplevels(subset(d,d$participant != "23"))
nrow(d)
d$participant <- as.factor(d$participant)
str(d$participant)
controls = droplevels(subset(d,d$expression == "control"))
nrow(controls)
table(controls$response)
# mean response to controls
agr = aggregate(response ~ expression, data=controls,FUN="mean")
agr
agr = aggregate(response ~ ID, data=controls, FUN="mean")
agr$CILow = aggregate(response ~ ID, data=controls, FUN="ci.low")$response
agr$CIHigh = aggregate(response ~ ID, data=controls, FUN="ci.high")$response
agr$YMin = agr$response - agr$CILow
agr$YMax = agr$response + agr$CIHigh
agr
ggplot(controls, aes(x=response))+
geom_histogram(position="dodge") +
#xlim(0, 20000)+
facet_wrap(~ID)
xlab("Responses to main clause controls by item")
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
setwd('/Users/tonhauser.1/Documents/fieldwork-data/guarani-fieldwork/Dec-2016/experiment/results')
source('scripts/helpers.R')
library(tidyverse)
library(languageR)
library(lme4)
theme_set(theme_bw())
d = read.csv("../results.csv")
nrow(d)
# age and gender of participants
table(d$gender,d$age)
d = droplevels(subset(d,d$itemNr != "22"))
nrow(d)
d = droplevels(subset(d,d$participant != "23"))
nrow(d)
d$participant <- as.factor(d$participant)
str(d$participant)
str(d$response)
str(d$list)
######## basic facts about the data #############
####### responses to main clause controls ###############
controls = droplevels(subset(d,d$expression == "control"))
nrow(controls)
table(controls$response)
agr = aggregate(response ~ expression, data=controls,FUN="mean")
agr
agr = aggregate(response ~ ID, data=controls, FUN="mean")
agr$CILow = aggregate(response ~ ID, data=controls, FUN="ci.low")$response
agr$CIHigh = aggregate(response ~ ID, data=controls, FUN="ci.high")$response
agr$YMin = agr$response - agr$CILow
agr$YMax = agr$response + agr$CIHigh
agr
ggplot(controls, aes(x=response))+
geom_histogram(position="dodge") +
#xlim(0, 20000)+
facet_wrap(~ID)
xlab("Responses to main clause controls by item")
c = aggregate(response ~ participant, data=controls, FUN="mean")
c$CILow = aggregate(response ~ participant, data=controls, FUN="ci.low")$response
c$CIHigh = aggregate(response ~ participant, data=controls, FUN="ci.high")$response
c$YMin = c$response - c$CILow
c$YMax = c$response + c$CIHigh
c
controls$participant2 <- factor(controls$participant,levels=c$participant[order(c$response)])
ggplot(controls, aes(x=participant2, y=response)) +
geom_point(position = position_jitter(w = 0, h = 0.1),alpha = 3/8) +
stat_summary(fun.y=mean, geom="point", color="blue", size=2,position=position_dodge(.9)) +
theme(text = element_text(size=12)) +
#scale_y_continuous(breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
ylab("Response")+
xlab("Participant")
ggsave(f="graphs/boxplot-controls-by-participant.pdf",height=3,width=8)
d[is.na(d$response),] #2 from participant 4 (items vya1 and controlB1)
# drop rows without response
cd = droplevels(subset(d,!is.na(d$response)))
theme_set(theme_bw())
d = read.csv("../results.csv")
nrow(d) #1200 = 30 participants x 40 items
names(d)
head(d)
summary(d)
# age and gender of participants
table(d$gender,d$age)
#     35- 35+
#  f 320 440
#  m 160 280
# age: 12 below 35, 18 above 34
# gender: 19 women, 11 men
# exclude responses to item 22 (vya-2) because ambiguous between 'is not hungry' and 'is not stingy'
d = droplevels(subset(d,d$itemNr != "22"))
nrow(d) #1170 = 30 participants x 39 items
# exclude participant #23 because they only responded '5'
d = droplevels(subset(d,d$participant != "23"))
nrow(d) #1131 = 29 participants x 39 items
# rows without a response?
d[is.na(d$response),] #2 from participant 4 (items vya1 and controlB1)
# drop rows without response
d = droplevels(subset(d,!is.na(d$response)))
## fix class of objects
d$participant <- as.factor(d$participant)
str(d$participant)
agr = aggregate(response ~ expression, data=controls,FUN="mean")
agr
agr = aggregate(response ~ ID, data=controls, FUN="mean")
agr$CILow = aggregate(response ~ ID, data=controls, FUN="ci.low")$response
agr$CIHigh = aggregate(response ~ ID, data=controls, FUN="ci.high")$response
agr$YMin = agr$response - agr$CILow
agr$YMax = agr$response + agr$CIHigh
agr
nrow(d) #1170 = 30 participants x 39 items
# save cleaned data
write.csv(d,file="data/cd.csv")
######### analysis starts here #####################
cd = read.csv("data/cd.csv")
nrow(cd) #1129 = 29 participants x 39 items - 2 items without response
levels(cd$expression) <- list("control"="control","CoS"="cos","haimete\n 'almost'"="haimete","hecha\n 'see'"="hecha","hechakuaa\n 'realize'"="hechakuaa","hechauka\n 'reveal'"="hechauka","he'i\n 'say'"="hei","hendu\n 'hear"="hendu","juhu\n 'discover'"="juhu","kuaa\n 'know'"="kuaa","kuaauka\n 'point out"="kuaauka","mo'a\n 'think'"="moa","mombe'u\n 'confess'"="mombeu","NRRC"="NRRC","nte\n 'only'"="nte","possNP"="possNP","topa\n 'discover'"="topa","vy'a\n 'happy'"="vya")
table(cd$expression)
levels(cd$expression) <- list("control"="control","CoS"="cos","haimete\n 'almost'"="haimete","hecha\n 'see'"="hecha","hechakuaa\n 'realize'"="hechakuaa","hechauka\n 'show'"="hechauka","'e\n 'say'"="hei","hendu\n 'hear"="hendu","juhu\n 'discover'"="juhu","kuaa\n 'know'"="kuaa","kuaauka\n 'point out"="kuaauka","mo'a\n 'think'"="moa","mombe'u\n 'confess'"="mombeu","NRRC"="NRRC","nte\n 'only'"="nte","possNP"="possNP","topa\n 'discover'"="topa","vy'a\n 'happy'"="vya")
table(cd$expression)
### basic facts about remaining data
# how many participants in each list?
table(cd$list)
# age/gender of participants?
table(cd$gender,cd$age)
str(cd$response)
cd$response <- as.numeric(cd$response)
table(cd$expression)
mean_proj = aggregate(response~expression, data=cd, FUN="mean")
mean_proj$YMin = mean_proj$response - aggregate(response~expression, data=cd, FUN="ci.low")$response
mean_proj$YMax = mean_proj$response + aggregate(response~expression, data=cd, FUN="ci.high")$response
mean_proj
cd$expression2 <-factor(cd$expression, levels=mean_proj[order(mean_proj$response), "expression"])
ggplot(cd, aes(x=expression2, y=response)) +
geom_boxplot(width=0.2,position=position_dodge(.9)) +
stat_summary(fun.y=mean, geom="point", color="black",fill="gray70", shape=21, size=3,position=position_dodge(.9)) +
theme(text = element_text(size=12)) +
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=0.4)) +
#scale_y_continuous(breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
ylab("Response")+
xlab("Expression")
ggsave(f="graphs/boxplot-projection.pdf",height=3.5,width=8)
######### analysis starts here #####################
cd = read.csv("data/cd.csv")
table(cd$expression)
levels(cd$expression) <- list("control"="control","CoS"="cos","haimete\n 'almost'"="haimete","hecha\n 'see'"="hecha","hechakuaa\n 'realize'"="hechakuaa","hechauka\n 'show'"="hechauka","e\n 'say'"="hei","hendu\n 'hear"="hendu","juhu\n 'discover'"="juhu","kuaa\n 'know'"="kuaa","kuaauka\n 'point out"="kuaauka","mo'a\n 'think'"="moa","mombe'u\n 'confess'"="mombeu","NRRC"="NRRC","nte\n 'only'"="nte","possNP"="possNP","topa\n 'discover'"="topa","vy'a\n 'happy'"="vya")
table(cd$expression)
levels(cd$expression) <- list("control"="control","CoS"="cos","haimete\n 'almost'"="haimete","hecha\n 'see'"="hecha","hechakuaa\n 'realize'"="hechakuaa","hechauka\n 'show'"="hechauka","\'e\n 'say'"="hei","hendu\n 'hear"="hendu","juhu\n 'discover'"="juhu","kuaa\n 'know'"="kuaa","kuaauka\n 'point out"="kuaauka","mo'a\n 'think'"="moa","mombe'u\n 'confess'"="mombeu","NRRC"="NRRC","nte\n 'only'"="nte","possNP"="possNP","topa\n 'discover'"="topa","vy'a\n 'happy'"="vya")
table(cd$expression)
levels(cd$expression) <- list("control"="control","CoS"="cos","haimete\n 'almost'"="haimete","hecha\n 'see'"="hecha","hechakuaa\n 'realize'"="hechakuaa","hechauka\n 'show'"="hechauka","'e\n 'say'"="hei","hendu\n 'hear"="hendu","juhu\n 'discover'"="juhu","kuaa\n 'know'"="kuaa","kuaauka\n 'point out"="kuaauka","mo'a\n 'think'"="moa","mombe'u\n 'confess'"="mombeu","NRRC"="NRRC","nte\n 'only'"="nte","possNP"="possNP","topa\n 'discover'"="topa","vy'a\n 'happy'"="vya")
table(cd$expression)
######### analysis starts here #####################
cd = read.csv("data/cd.csv")
table(cd$expression)
levels(cd$expression) <- list("control"="control","CoS"="cos","haimete\n 'almost'"="haimete","hecha\n 'see'"="hecha","hechakuaa\n 'realize'"="hechakuaa","hechauka\n 'show'"="hechauka","\'e\n 'say'"="hei","hendu\n 'hear"="hendu","juhu\n 'discover'"="juhu","kuaa\n 'know'"="kuaa","kuaauka\n 'point out"="kuaauka","mo'a\n 'think'"="moa","mombe'u\n 'confess'"="mombeu","NRRC"="NRRC","nte\n 'only'"="nte","possNP"="possNP","topa\n 'discover'"="topa","vy'a\n 'happy'"="vya")
table(cd$expression)
str(cd$response)
cd$response <- as.numeric(cd$response)
table(cd$expression)
mean_proj = aggregate(response~expression, data=cd, FUN="mean")
mean_proj$YMin = mean_proj$response - aggregate(response~expression, data=cd, FUN="ci.low")$response
mean_proj$YMax = mean_proj$response + aggregate(response~expression, data=cd, FUN="ci.high")$response
mean_proj
cd$expression2 <-factor(cd$expression, levels=mean_proj[order(mean_proj$response), "expression"])
ggplot(cd, aes(x=expression2, y=response)) +
geom_boxplot(width=0.2,position=position_dodge(.9)) +
stat_summary(fun.y=mean, geom="point", color="black",fill="gray70", shape=21, size=3,position=position_dodge(.9)) +
theme(text = element_text(size=12)) +
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=0.4)) +
#scale_y_continuous(breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
ylab("Response")+
xlab("Expression")
ggsave(f="graphs/boxplot-projection.pdf",height=3.5,width=8)
table(cd$expression)
target <- droplevels(subset(cd, cd$expression != "control"))
nrow(target)
ggplot(target, aes(x=participant2, y=response)) +
geom_boxplot(width=0.2,position=position_dodge(.9)) +
stat_summary(fun.y=mean, geom="point", color="black",fill="gray70", shape=21, size=3,position=position_dodge(.9)) +
theme(text = element_text(size=12)) +
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=0.4)) +
#scale_y_continuous(breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
ylab("Response")+
xlab("Participant")
ggsave(f="graphs/boxplot-participant.pdf",height=3,width=8)
mean_proj = aggregate(response~participant, data=target, FUN="mean")
mean_proj$YMin = mean_proj$response - aggregate(response~participant, data=target, FUN="ci.low")$response
mean_proj$YMax = mean_proj$response + aggregate(response~participant, data=target, FUN="ci.high")$response
mean_proj
target$participant2 <-factor(target$participant, levels=mean_proj[order(mean_proj$response), "participant"])
ggplot(target, aes(x=participant2, y=response)) +
geom_boxplot(width=0.2,position=position_dodge(.9)) +
stat_summary(fun.y=mean, geom="point", color="black",fill="gray70", shape=21, size=3,position=position_dodge(.9)) +
theme(text = element_text(size=12)) +
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=0.4)) +
#scale_y_continuous(breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
ylab("Response")+
xlab("Participant")
ggsave(f="graphs/boxplot-participant.pdf",height=3,width=8)
cd.pairs = droplevels(subset(target,target$expression != "vy'a\n 'happy'"))
nrow(cd.pairs)
mean_proj = aggregate(response~ID, data=cd.pairs, FUN="mean")
mean_proj$YMin = mean_proj$response - aggregate(response~ID, data=cd.pairs, FUN="ci.low")$response
mean_proj$YMax = mean_proj$response + aggregate(response~ID, data=cd.pairs, FUN="ci.high")$response
mean_proj
cd.pairs$ID2 <-factor(cd.pairs$ID, levels=mean_proj[order(mean_proj$response), "ID"])
ggplot(cd.pairs, aes(x=ID2, y=response)) +
geom_boxplot(width=0.2,position=position_dodge(.9)) +
stat_summary(fun.y=mean, geom="point", color="black",fill="gray70", shape=21, size=3,position=position_dodge(.9)) +
theme(text = element_text(size=12)) +
#facet_grid(expression~., scales = "free") +
facet_wrap(~expression, scales = "free",nrow=5) +
#coord_flip(xlim = NULL, ylim = NULL, expand = TRUE) +
theme(strip.text.y=element_text(angle=0)) +
ylab("Response")+
xlab("Expression")
ggsave(f="graphs/boxplot-projection-for-pairs-of-items.pdf",height=10,width=10)
