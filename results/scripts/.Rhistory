str(d$list)
write.csv(d,file="../data/cd.csv")
length(unique(cd$participant)) #29
#### plots ----
cd = read.csv("../data/cd.csv")
nrow(cd) #1129 = 29 participants x 39 items - 2 items without response
# rename expressions
levels(cd$expression) <- list("control"="control","CoS"="cos","haimete\n 'almost'"="haimete","hecha\n 'see'"="hecha","hechakuaa\n 'realize'"="hechakuaa","hechauka\n 'show'"="hechauka","\'e\n 'say'"="hei","hendu\n 'hear'"="hendu","juhu\n 'discover'"="juhu","kuaa\n 'know'"="kuaa","kuaauka\n 'point out"="kuaauka","mo'a\n 'think'"="moa","mombe'u\n 'confess'"="mombeu","NRRC"="NRRC","nte\n 'only'"="nte","possNP"="possNP","topa\n 'discover'"="topa","vy'a\n 'happy'"="vya")
table(cd$expression)
### basic facts about remaining data
# how many participants in each list?
table(cd$list)
# AB  BA
# 546 583
# age/gender of participants?
table(cd$gender,cd$age)
# Figure 2: by-expression projectivity
str(cd$response)
cd$response <- as.numeric(cd$response)
table(cd$expression)
means = cd %>%
group_by(expression) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh, expression = fct_reorder(as.factor(expression),Mean))
means
levels(means$expression)
# define colors for the predicates
cols = data.frame(V=levels(means$expression))
table(means$expression)
cols$VeridicalityGroup = as.factor(
ifelse(cols$V %in% c("NRRC"), "CI",
ifelse(cols$V %in% c("mombe'u 'confess'", "'e\n 'say'", "hendu\n 'hear'", "hechauka\n 'show'"), "PNF",
ifelse(cols$V %in% c("control","mo'a\n 'think'"),"MC","PS"))))
levels(cols$V)
cols$V <- factor(cols$V, levels = cols[order(as.character(means$expression)),]$V, ordered = TRUE)
cols$Colors =  ifelse(cols$VeridicalityGroup == "PNF", "tomato1",
ifelse(cols$VeridicalityGroup == "CI","dodgerblue",
ifelse(cols$VeridicalityGroup == "MC","black","darkorchid"))))
cols$Colors =  ifelse(cols$VeridicalityGroup == "PNF", "tomato1",
ifelse(cols$VeridicalityGroup == "CI","dodgerblue",
ifelse(cols$VeridicalityGroup == "MC","black","darkorchid")))
cols$Colors
cols$V <- factor(cols$V, levels = cols[order(as.character(means$expression)),]$V, ordered = TRUE)
levels(cols$V)
means$VeridicalityGroup = as.factor(
ifelse(means$expression %in% c("NRRC"), "CI",
ifelse(means$expression  %in% c("mombe'u 'confess'", "'e\n 'say'", "hendu\n 'hear'", "hechauka\n 'show'"), "PNF",
ifelse(means$verb  %in% c("control","mo'a\n 'think'"),"MC","PS"))))
means$VeridicalityGroup = as.factor(
ifelse(means$expression %in% c("NRRC"), "CI",
ifelse(means$expression  %in% c("mombe'u 'confess'", "'e\n 'say'", "hendu\n 'hear'", "hechauka\n 'show'"), "PNF",
ifelse(means$expression  %in% c("control","mo'a\n 'think'"),"MC","PS"))))
means = cd %>%
group_by(expression) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh, expression = fct_reorder(as.factor(expression),Mean))
means
levels(means$expression)
# define colors for the predicates
cols = data.frame(V=levels(means$expression))
table(means$expression)
cols$VeridicalityGroup = as.factor(
ifelse(cols$V %in% c("NRRC"), "CI",
ifelse(cols$V %in% c("mombe'u 'confess'", "'e\n 'say'", "hendu\n 'hear'", "hechauka\n 'show'"), "PNF",
ifelse(cols$V %in% c("control","mo'a\n 'think'"),"MC","PS"))))
levels(cols$V)
cols$V <- factor(cols$V, levels = cols[order(as.character(means$expression)),]$V, ordered = TRUE)
cols$Colors =  ifelse(cols$VeridicalityGroup == "PNF", "tomato1",
ifelse(cols$VeridicalityGroup == "CI","dodgerblue",
ifelse(cols$VeridicalityGroup == "MC","black","darkorchid")))
cols$Colors
cols$V <- factor(cols$V, levels = cols[order(as.character(means$expression)),]$V, ordered = TRUE)
levels(cols$V)
means$VeridicalityGroup = as.factor(
ifelse(means$expression %in% c("NRRC"), "CI",
ifelse(means$expression  %in% c("mombe'u 'confess'", "'e\n 'say'", "hendu\n 'hear'", "hechauka\n 'show'"), "PNF",
ifelse(means$expression  %in% c("control","mo'a\n 'think'"),"MC","PS"))))
subjmeans = cd %>%
group_by(expression,participant) %>%
summarize(Mean = mean(response))
subjmeans$expression <- factor(subjmeans$expression, levels = unique(levels(means$expression)))
levels(subjmeans$expression)
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=2.5,color="black")
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=2.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("darkorchid","black","gray60","tomato1","dodgerblue")) +
guides(fill=FALSE)
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=2.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("darkorchid","black","gray60","tomato1","dodgerblue")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors))
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=2.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("darkorchid","black","gray60","tomato1","dodgerblue")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression") +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))
str(cd$response)
cd$response <- as.numeric(cd$response)
table(cd$expression)
means = cd %>%
group_by(expression) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh, expression = fct_reorder(as.factor(expression),Mean))
means
levels(means$expression)
levels(means$expression)
# define colors for the predicates
cols = data.frame(V=levels(means$expression))
cols$VeridicalityGroup = as.factor(
ifelse(cols$V %in% c("NRRC"), "CI",
ifelse(cols$V %in% c("mombe'u 'confess'", "'e\n 'say'", "hendu\n 'hear'", "hechauka\n 'show'"), "PNF",
ifelse(cols$V %in% c("control","mo'a\n 'think'"),"MC","PS"))))
levels(cols$V)
cols$V <- factor(cols$V, levels = cols[order(as.character(means$expression)),]$V, ordered = TRUE)
levels(cols$V)
cols$V <- factor(cols$V, levels = cols[order(as.character(means$expression)),]$Mean, ordered = TRUE)
levels(cols$V)
means$expression
order(as.character(means$expression))
cols$Colors =  ifelse(cols$VeridicalityGroup == "PNF", "tomato1",
ifelse(cols$VeridicalityGroup == "CI","dodgerblue",
ifelse(cols$VeridicalityGroup == "MC","black","darkorchid")))
cols$Colors
cols$V <- factor(cols$V, levels = cols[order(as.character(means$expression)),]$V, ordered = TRUE)
levels(cols$V)
cd = read.csv("../data/cd.csv")
nrow(cd) #1129 = 29 participants x 39 items - 2 items without response
# rename expressions
levels(cd$expression) <- list("control"="control","CoS"="cos","haimete\n 'almost'"="haimete","hecha\n 'see'"="hecha","hechakuaa\n 'realize'"="hechakuaa","hechauka\n 'show'"="hechauka","\'e\n 'say'"="hei","hendu\n 'hear'"="hendu","juhu\n 'discover'"="juhu","kuaa\n 'know'"="kuaa","kuaauka\n 'point out"="kuaauka","mo'a\n 'think'"="moa","mombe'u\n 'confess'"="mombeu","NRRC"="NRRC","nte\n 'only'"="nte","possNP"="possNP","topa\n 'discover'"="topa","vy'a\n 'happy'"="vya")
table(cd$expression)
### basic facts about remaining data
# how many participants in each list?
table(cd$list)
# AB  BA
# 546 583
# age/gender of participants?
table(cd$gender,cd$age)
# Figure 2: by-expression projectivity
str(cd$response)
cd$response <- as.numeric(cd$response)
table(cd$expression)
means = cd %>%
group_by(expression) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh, expression = fct_reorder(as.factor(expression),Mean))
means
levels(means$expression)
# define colors for the predicates
cols = data.frame(V=levels(means$expression))
levels(cols$V)
cols$VeridicalityGroup = as.factor(
ifelse(cols$V %in% c("NRRC"), "CI",
ifelse(cols$V %in% c("mombe'u 'confess'", "'e\n 'say'", "hendu\n 'hear'", "hechauka\n 'show'"), "PNF",
ifelse(cols$V %in% c("control","mo'a\n 'think'"),"MC","PS"))))
cols
cols$Colors =  ifelse(cols$VeridicalityGroup == "PNF", "tomato1",
ifelse(cols$VeridicalityGroup == "CI","dodgerblue",
ifelse(cols$VeridicalityGroup == "MC","black","darkorchid")))
cols
cols$Colors
means$VeridicalityGroup = as.factor(
ifelse(means$expression %in% c("NRRC"), "CI",
ifelse(means$expression  %in% c("mombe'u 'confess'", "'e\n 'say'", "hendu\n 'hear'", "hechauka\n 'show'"), "PNF",
ifelse(means$expression  %in% c("control","mo'a\n 'think'"),"MC","PS"))))
subjmeans = cd %>%
group_by(expression,participant) %>%
summarize(Mean = mean(response))
subjmeans$expression <- factor(subjmeans$expression, levels = unique(levels(means$expression)))
levels(subjmeans$expression)
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50")
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=2.5,color="black")
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=2.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("darkorchid","black","gray60","tomato1","dodgerblue"))
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=2.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("darkorchid","black","gray60","tomato1","dodgerblue")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors))
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=2.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","gray60","tomato1","darkorchid)) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating")
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=2.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","gray60","tomato1","darkorchid")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression")
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=2.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","gray60","darkorchid","tomato1")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression")
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=2.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","darkorchid","tomato1")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression") +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=2.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","tomato1","darkorchid")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression") +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))
ggsave(f="../graphs/projection-means-by-expression.pdf",height=4,width=10)
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=2.6,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","tomato1","darkorchid")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression") +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))
ggsave(f="../graphs/projection-means-by-expression.pdf",height=4,width=10)
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=3,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","tomato1","darkorchid")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression") +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))
ggsave(f="../graphs/projection-means-by-expression.pdf",height=4,width=10)
levels(cols$V)
means$VeridicalityGroup = as.factor(
ifelse(means$expression %in% c("NRRC"), "CI",
ifelse(means$expression  %in% c("mombe'u\n 'confess'", "'e\n 'say'", "hendu\n 'hear'", "hechauka\n 'show'"), "PNF",
ifelse(means$expression  %in% c("control","mo'a\n 'think'"),"MC","PS"))))
subjmeans = cd %>%
group_by(expression,participant) %>%
summarize(Mean = mean(response))
subjmeans$expression <- factor(subjmeans$expression, levels = unique(levels(means$expression)))
levels(subjmeans$expression)
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=3,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","tomato1","darkorchid")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression") +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))
ggsave(f="../graphs/projection-means-by-expression.pdf",height=4,width=10)
cols$VeridicalityGroup = as.factor(
ifelse(cols$V %in% c("NRRC"), "CI",
ifelse(cols$V %in% c("mombe'u\n 'confess'", "'e\n 'say'", "hendu\n 'hear'", "hechauka\n 'show'"), "PNF",
ifelse(cols$V %in% c("control","mo'a\n 'think'"),"MC","PS"))))
cols
levels(cols$V)
cols$Colors =  ifelse(cols$VeridicalityGroup == "PNF", "tomato1",
ifelse(cols$VeridicalityGroup == "CI","dodgerblue",
ifelse(cols$VeridicalityGroup == "MC","black","darkorchid")))
cols$Colors
cols$V <- factor(cols$V, levels = cols[order(as.character(means$expression)),]$V, ordered = TRUE)
levels(cols$V)
means$VeridicalityGroup = as.factor(
ifelse(means$expression %in% c("NRRC"), "CI",
ifelse(means$expression  %in% c("mombe'u\n 'confess'", "'e\n 'say'", "hendu\n 'hear'", "hechauka\n 'show'"), "PNF",
ifelse(means$expression  %in% c("control","mo'a\n 'think'"),"MC","PS"))))
subjmeans = cd %>%
group_by(expression,participant) %>%
summarize(Mean = mean(response))
subjmeans$expression <- factor(subjmeans$expression, levels = unique(levels(means$expression)))
levels(subjmeans$expression)
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=3,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","tomato1","darkorchid")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression") +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))
ggsave(f="../graphs/projection-means-by-expression.pdf",height=4,width=10)
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=4,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","tomato1","darkorchid")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression") +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))
ggsave(f="../graphs/projection-means-by-expression.pdf",height=4,width=10)
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=3.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","tomato1","darkorchid")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression") +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))
ggsave(f="../graphs/projection-means-by-expression.pdf",height=3.5,width=9)
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=3.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","tomato1","darkorchid")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression") +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))
ggsave(f="../graphs/projection-means-by-expression.pdf",height=3.5,width=9.5)
cd = read.csv("../data/cd.csv")
nrow(cd) #1129 = 29 participants x 39 items - 2 items without response
# rename expressions
levels(cd$expression) <- list("control"="control","CoS"="cos","haimete\n 'almost'"="haimete","hecha\n 'see'"="hecha","hechakuaa\n 'realize'"="hechakuaa","hechauka\n 'show'"="hechauka","\'e\n 'say'"="hei","hendu\n 'hear'"="hendu","juhu\n 'discover'"="juhu","kuaa\n 'know'"="kuaa","kuaauka\n 'point out'"="kuaauka","mo'a\n 'think'"="moa","mombe'u\n 'confess'"="mombeu","NRRC"="NRRC","nte\n 'only'"="nte","possNP"="possNP","topa\n 'discover'"="topa","vy'a\n 'happy'"="vya")
table(cd$expression)
### basic facts about remaining data
# how many participants in each list?
table(cd$list)
# AB  BA
# 546 583
# age/gender of participants?
table(cd$gender,cd$age)
# Figure 2: by-expression projectivity
str(cd$response)
cd$response <- as.numeric(cd$response)
table(cd$expression)
means = cd %>%
group_by(expression) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh, expression = fct_reorder(as.factor(expression),Mean))
means
levels(means$expression)
# define colors for the predicates
cols = data.frame(V=levels(means$expression))
cols$VeridicalityGroup = as.factor(
ifelse(cols$V %in% c("NRRC"), "CI",
ifelse(cols$V %in% c("mombe'u\n 'confess'", "'e\n 'say'", "hendu\n 'hear'", "hechauka\n 'show'"), "PNF",
ifelse(cols$V %in% c("control","mo'a\n 'think'"),"MC","PS"))))
cols
levels(cols$V)
cols$Colors =  ifelse(cols$VeridicalityGroup == "PNF", "tomato1",
ifelse(cols$VeridicalityGroup == "CI","dodgerblue",
ifelse(cols$VeridicalityGroup == "MC","black","darkorchid")))
cols$Colors
cols$V <- factor(cols$V, levels = cols[order(as.character(means$expression)),]$V, ordered = TRUE)
levels(cols$V)
means$VeridicalityGroup = as.factor(
ifelse(means$expression %in% c("NRRC"), "CI",
ifelse(means$expression  %in% c("mombe'u\n 'confess'", "'e\n 'say'", "hendu\n 'hear'", "hechauka\n 'show'"), "PNF",
ifelse(means$expression  %in% c("control","mo'a\n 'think'"),"MC","PS"))))
subjmeans = cd %>%
group_by(expression,participant) %>%
summarize(Mean = mean(response))
subjmeans$expression <- factor(subjmeans$expression, levels = unique(levels(means$expression)))
levels(subjmeans$expression)
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=3.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","tomato1","darkorchid")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression") +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))
ggsave(f="../graphs/projection-means-by-expression.pdf",height=3.5,width=9.5)
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=3.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","tomato1","darkorchid")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression") +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))
ggsave(f="../graphs/projection-means-by-expression.pdf",height=3,width=9.5)
ggplot(means, aes(x=expression, y=Mean,fill=VeridicalityGroup)) +
geom_jitter(width=.1,shape=16,fill="gray60",data=subjmeans, alpha=.3, color="gray50") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=0.1,color="black") +
geom_point(shape=21,stroke=.5,size=3.5,color="black") +
#scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0)) +
#scale_alpha(range = c(.3,1)) +
scale_fill_manual(values=c("dodgerblue","black","tomato1","darkorchid")) +
guides(fill=FALSE) +
theme(text = element_text(size=12), axis.text.x = element_text(size = 12, angle = 45, hjust = 1,
color=cols$Colors)) +
#theme(legend.position="top") +
ylab("Mean certainty rating") +
xlab("Expression") +
theme(axis.text.x = element_text(size = 12, angle = 45, hjust = 1))
ggsave(f="../graphs/projection-means-by-expression.pdf",height=4,width=9.5)
summary(model)
which(R)
which?
help(which)
R.Version()
